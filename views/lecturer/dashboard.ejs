<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lecturer Dashboard
    </title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .dashboard-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background-color: #4CAF50;
            color: white;
        }

        .btn-primary:hover {
            background-color: #45a049;
        }

        .grading-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
            background: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .grading-table th,
        .grading-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .grading-table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }

        .grading-table tr:hover {
            background-color: #f8f9fa;
        }

        .btn-grade {
            background-color: #2196F3;
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: background-color 0.3s;
        }

        .btn-grade:hover {
            background-color: #1976D2;
        }

        .no-submissions {
            text-align: center;
            padding: 2rem;
            color: #666;
            background: #f8f9fa;
            border-radius: 8px;
            margin-top: 1rem;
        }

        .logout-link {
            position: absolute;
            top: 1rem;
            right: 1rem;
            color: #dc3545;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .logout-link:hover {
            color: #c82333;
        }

        .performance-section {
            margin-top: 3rem;
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .chart-container {
            max-width: 800px;
            margin: 2rem auto;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            overflow-y: auto;
        }

        .modal-content {
            position: relative;
            background-color: #fff;
            margin: 2% auto;
            padding: 2rem;
            width: 90%;
            max-width: 1200px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-top: 1rem;
        }

        .file-preview-section {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            min-height: 400px;
            border: 1px solid #ddd;
        }

        .file-preview-section h3 {
            margin-bottom: 1rem;
            color: #333;
        }

        .file-preview-container {
            width: 100%;
            height: 350px;
            border: 1px solid #ddd;
            background: white;
            overflow: auto;
        }

        .file-preview-container iframe {
            width: 100%;
            height: 100%;
            border: none;
        }

        .file-preview-container .text-preview {
            padding: 1rem;
            white-space: pre-wrap;
            font-family: monospace;
        }

        .grade-form {
            margin-top: 0;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            background: white;
        }

        .form-group textarea {
            min-height: 150px;
            resize: vertical;
        }

        .form-group input:read-only {
            background-color: #f8f9fa;
        }

        .modal-actions {
            margin-top: 2rem;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        .btn-cancel {
            background-color: #6c757d;
            color: white;
        }

        .btn-cancel:hover {
            background-color: #5a6268;
        }

        .toast {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            padding: 1rem 2rem;
            background-color: #4CAF50;
            color: white;
            border-radius: 4px;
            display: none;
            z-index: 1001;
        }

        .styled-dropdown {
            padding: 0.5rem 2rem 0.5rem 1rem;
            border: 1px solid #4CAF50;
            border-radius: 4px;
            background: #f8f9fa url('data:image/svg+xml;utf8,<svg fill="%234CAF50" height="20" viewBox="0 0 24 24" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>') no-repeat right 0.75rem center/1.2em;
            font-size: 1rem;
            color: #333;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            min-width: 200px;
            cursor: pointer;
            transition: border-color 0.3s;
        }

        .styled-dropdown:focus {
            border-color: #2196F3;
            outline: none;
        }
    </style>
</head>

<body>
    <!-- <%- include('../partials/header', { user }) %> -->

    <a href="/auth/logout" class="logout-link">Logout</a>

    <!-- Grading Modal -->
    <div id="gradingModal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>Grade Submission</h2>
            <div class="modal-grid">
                <div class="file-preview-section">
                    <h3>Submission Preview</h3>
                    <div class="file-preview-container" id="filePreview">
                        <!-- File preview will be loaded here -->
                    </div>
                </div>
                <div class="grade-form">
                    <div class="form-group">
                        <label for="studentName">Student:</label>
                        <input type="text" id="studentName" readonly>
                    </div>
                    <div class="form-group">
                        <label for="assignmentTitle">Assignment:</label>
                        <input type="text" id="assignmentTitle" readonly>
                    </div>
                    <div class="form-group">
                        <label for="submissionDate">Submission Date:</label>
                        <input type="text" id="submissionDate" readonly>
                    </div>
                    <div class="form-group">
                        <label for="grade">Grade (0-100):</label>
                        <input type="number" id="grade" min="0" max="100" required>
                    </div>
                    <div class="form-group">
                        <label for="feedback">Feedback:</label>
                        <textarea id="feedback" required></textarea>
                    </div>
                    <div class="modal-actions">
                        <button class="btn btn-cancel" onclick="closeModal()">Cancel</button>
                        <button class="btn btn-primary" onclick="submitGrade()">Submit Grade</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast"></div>

    <div class="dashboard-container">
        <div class="dashboard-header">
            <h1>Lecturer Dashboard</h1>
            <button onclick="location.href='/lecturer/create-assignment'" class="btn btn-primary">
                <i class="fas fa-plus"></i> Create Assignment
            </button>
        </div>

        <div class="container">
            <h2>Submissions to Grade</h2>
            <% if (submissions && submissions.length> 0) { %>
                <table class="grading-table">
                    <thead>
                        <tr>
                            <th>Student</th>
                            <th>Assignment</th>
                            <th>Submission Date</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% submissions.forEach(submission=> { %>
                            <tr>
                                <td>
                                    <%= submission.student_name %>
                                </td>
                                <td>
                                    <%= submission.assignment_title %>
                                </td>
                                <td>
                                    <%= new Date(submission.submitted_at).toLocaleDateString() %>
                                </td>
                                <td><span class="status-badge status-<%= submission.status.toLowerCase() %>">
                                        <%= submission.status %>
                                    </span></td>
                                <td>
                                    <button class="btn-grade"
                                        onclick="openGradingModal('<%= submission.submission_id %>', '<%= submission.student_name %>', '<%= submission.assignment_title %>', '<%= submission.submitted_at %>')">
                                        <i class="fas fa-check-circle"></i> Grade Now
                                    </button>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>
                <% } else { %>
                    <div class="no-submissions">
                        <i class="fas fa-inbox fa-2x"></i>
                        <p>No submissions to grade at the moment.</p>
                    </div>
                    <% } %>

                        <div class="performance-section" style="position: relative;">
                            <h2 style="display: inline-block;">Class Performance</h2>
                            <select id="assignmentDropdown" class="styled-dropdown"
                                style="position: absolute; right: 0; top: 10px; min-width: 200px;">
                                <% if (assignments && assignments.length> 0) { %>
                                    <% assignments.forEach(function(assignment) { %>
                                        <option value="<%= assignment.id %>">
                                            <%= assignment.title %>
                                        </option>
                                        <% }); %>
                                            <% } else { %>
                                                <option disabled selected>No assignments found</option>
                                                <% } %>
                            </select>
                            <div class="chart-container">
                                <canvas id="classChart"></canvas>
                            </div>
                        </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

        <script src="/js/lecturer.js"></script>
        <script src="/js/grading.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            // Helper: get first assignmentId if available
            const firstAssignmentId = (typeof assignments !== 'undefined' && assignments.length > 0) ? assignments[0].id : null;

            // Chart.js setup for grade distribution
            const ctx = document.getElementById('classChart').getContext('2d');
            let chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['A', 'B', 'C', 'D', 'F'],
                    datasets: [{
                        label: 'Grade Distribution',
                        data: [0, 0, 0, 0, 0],
                        backgroundColor: 'rgba(54, 162, 235, 0.7)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            precision: 0
                        }
                    }
                }
            });

            // Function to fetch and update grade distribution
            async function updateGradeDistribution(assignmentId) {
                if (!assignmentId) return;
                try {
                    const response = await fetch(`/lecturer/grade-distribution/${assignmentId}`);
                    const result = await response.json();
                    if (result.success && result.distribution) {
                        const dist = result.distribution;
                        chart.data.datasets[0].data = [dist.A || 0, dist.B || 0, dist.C || 0, dist.D || 0, dist.F || 0];
                    } else {
                        chart.data.datasets[0].data = [0, 0, 0, 0, 0];
                    }
                    chart.update();
                } catch (err) {
                    console.error('Failed to fetch grade distribution', err);
                    chart.data.datasets[0].data = [0, 0, 0, 0, 0];
                    chart.update();
                }
            }

            // On page load, show first assignment's distribution
            if (firstAssignmentId) {
                updateGradeDistribution(firstAssignmentId);
            }

            // Dropdown change event (AJAX)
            const dropdown = document.getElementById('assignmentDropdown');
            dropdown.addEventListener('change', function () {
                updateGradeDistribution(this.value);
            });
        </script>

        <!-- DEBUG: Show performance data -->
        <pre id="debug-performance" style="display:none;"><%- JSON.stringify(performance) %></pre>
</body>

</html>