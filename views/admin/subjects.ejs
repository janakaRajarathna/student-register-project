<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Subjects - Admin Panel</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <h3><i class="fas fa-user-shield"></i> Admin Panel</h3>
            </div>
            <ul class="nav-links">
                <li><a href="/admin/dashboard"><i class="fas fa-home"></i> Dashboard</a></li>
                <li><a href="/admin/users"><i class="fas fa-users"></i> Manage Users</a></li>
                <li><a href="/admin/subjects" class="active"><i class="fas fa-book"></i> Manage Subjects</a></li>
                <li><a href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
            </ul>
        </nav>

        <main class="main-content">
            <header class="dashboard-header">
                <h1><i class="fas fa-book"></i> Manage Subjects</h1>
                <button onclick="showSubjectModal()" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add New Subject
                </button>
            </header>

            <!-- Subjects Table -->
            <div class="table-container">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Subject Name</th>
                            <th>Lecturer</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (subjects && subjects.length> 0) { %>
                            <% subjects.forEach(subject=> { %>
                                <tr>
                                    <td>
                                        <%= subject.name %>
                                    </td>
                                    <td>
                                        <%= subject.lecturer_name || 'Not Assigned' %>
                                    </td>
                                    <td class="action-buttons">
                                        <button onclick="editSubject(<%= JSON.stringify(subject) %>)"
                                            class="btn btn-edit">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button onclick="deleteSubject(<%= subject.id %>)" class="btn btn-delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                                <% }); %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="3" class="no-data">No subjects found</td>
                                        </tr>
                                        <% } %>
                    </tbody>
                </table>
            </div>
        </main>
    </div>

    <!-- Add/Edit Subject Modal -->
    <div id="subjectModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2 id="modalTitle">Add New Subject</h2>
            <form id="subjectForm">
                <input type="hidden" id="subjectId" name="id">
                <div class="form-group">
                    <label for="subjectName">Subject Name:</label>
                    <input type="text" id="subjectName" name="name" required>
                </div>
                <div class="form-group">
                    <label for="lecturerId">Assign Lecturer:</label>
                    <select id="lecturerId" name="lecturer_id" required>
                        <option value="">Select Lecturer</option>
                        <% lecturers.forEach(lecturer=> { %>
                            <option value="<%= lecturer.id %>">
                                <%= lecturer.full_name %>
                            </option>
                            <% }); %>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Save Subject</button>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Confirm Delete</h2>
            <p>Are you sure you want to delete this subject? This action cannot be undone.</p>
            <div class="modal-actions">
                <button onclick="confirmDelete()" class="btn btn-delete">Delete</button>
                <button onclick="closeDeleteModal()" class="btn btn-secondary">Cancel</button>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast"></div>

    <style>
        /* Table Styles */
        .table-container {
            background: white;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            padding: 20px;
            margin-top: 20px;
            overflow-x: auto;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        .data-table th,
        .data-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .data-table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: var(--secondary-color);
        }

        .data-table tr:hover {
            background-color: #f8f9fa;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .btn-edit {
            background-color: var(--warning-color);
            color: white;
        }

        .btn-delete {
            background-color: var(--danger-color);
            color: white;
        }

        .btn-secondary {
            background-color: #6c757d;
            color: white;
        }

        .no-data {
            text-align: center;
            color: #666;
            padding: 20px;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            border-radius: 10px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: black;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: var(--secondary-color);
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        /* Toast Styles */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: 5px;
            color: white;
            font-weight: 500;
            display: none;
            z-index: 1000;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.3s ease-in-out;
        }

        .toast-success {
            background-color: var(--success-color);
        }

        .toast-error {
            background-color: var(--danger-color);
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }

            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }

            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
    </style>

    <script>
        let subjectToDelete = null;

        // Modal functionality
        function showSubjectModal(subject = null) {
            const modal = document.getElementById('subjectModal');
            const form = document.getElementById('subjectForm');
            const title = document.getElementById('modalTitle');

            if (subject) {
                title.textContent = 'Edit Subject';
                document.getElementById('subjectId').value = subject.id;
                document.getElementById('subjectName').value = subject.name;
                document.getElementById('lecturerId').value = subject.lecturer_id || '';
            } else {
                title.textContent = 'Add New Subject';
                form.reset();
                document.getElementById('subjectId').value = '';
            }

            modal.style.display = 'block';
        }

        function showDeleteModal(subjectId) {
            subjectToDelete = subjectId;
            document.getElementById('deleteModal').style.display = 'block';
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
            subjectToDelete = null;
        }

        // Close modals when clicking the X
        document.querySelectorAll('.close').forEach(closeBtn => {
            closeBtn.onclick = function () {
                this.closest('.modal').style.display = 'none';
            }
        });

        // Close modals when clicking outside
        window.onclick = function (event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        }

        // Toast functionality
        function showToast(message, type) {
            const toast = document.getElementById('toast');
            toast.textContent = message;
            toast.className = `toast toast-${type}`;
            toast.style.display = 'block';

            setTimeout(() => {
                toast.style.animation = 'slideOut 0.3s ease-in-out';
                setTimeout(() => {
                    toast.style.display = 'none';
                    toast.style.animation = 'slideIn 0.3s ease-in-out';
                }, 300);
            }, 3000);
        }

        // Form submission
        document.getElementById('subjectForm').onsubmit = async function (e) {
            e.preventDefault();
            const formData = new FormData(this);
            const subjectId = formData.get('id');
            const method = subjectId ? 'PUT' : 'POST';
            const url = subjectId ? `/admin/subjects/${subjectId}` : '/admin/subjects';

            try {
                const response = await fetch(url, {
                    method: method,
                    body: formData
                });

                const data = await response.json();

                if (response.ok) {
                    showToast(subjectId ? 'Subject updated successfully!' : 'Subject created successfully!', 'success');
                    document.getElementById('subjectModal').style.display = 'none';
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast(data.error || 'Operation failed', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('An error occurred. Please try again.', 'error');
            }
        };

        // Delete subject
        async function confirmDelete() {
            if (!subjectToDelete) return;

            try {
                const response = await fetch(`/admin/subjects/${subjectToDelete}`, {
                    method: 'DELETE'
                });

                const data = await response.json();

                if (response.ok) {
                    showToast('Subject deleted successfully!', 'success');
                    closeDeleteModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast(data.error || 'Failed to delete subject', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showToast('An error occurred. Please try again.', 'error');
            }
        }

        // Edit subject
        function editSubject(subject) {
            showSubjectModal(subject);
        }

        // Delete subject
        function deleteSubject(subjectId) {
            showDeleteModal(subjectId);
        }
    </script>
</body>

</html>